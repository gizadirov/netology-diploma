#!/usr/bin/env groovy

pipeline {
    agent {
        kubernetes {
            yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: docker
            image: docker:latest
            imagePullPolicy: IfNotPresent
            securityContext:
              privileged: true
            volumeMounts:
              - name: dind-storage
                mountPath: /var/lib/docker
          - name: k8s-tools
            image: tabwizard/k8s-tools:latest
            tty: true
          volumes:
            - name: dind-storage
              emptyDir: {}
        '''
        }
    }
    parameters {
        string(name: 'tagString', defaultValue: 'v0.0.1', description: 'Tag vX.X.X')
    }
    triggers {
        GenericTrigger(
            genericVariables: [
                [key: 'tagString',
                    value: '$.ref',
                    expressionType: 'JSONPath']
                ],
                tokenCredentialId: 'webhook_token1',
                printContributedVariables: true,
                printPostContent: true,
                regexpFilterText: '$tagString',
                regexpFilterExpression: 'v\\d+\\.\\d+\\.\\d+'
        )
    }
    environment {
        REGISTRY = 'cr.yandex/crp0c81tkbq1dub8dc8c/'
        IMAGE_NAME = 'app'
        TAG = "${params.tagString}"
        KUBECONFIG = '/root/.kube/config'
    }
    stages {
        stage('Checkout from github repo') {
            steps {
                
                checkout scm: [$class: 'GitSCM', userRemoteConfigs: [[url: 'https://github.com/gizadirov/netology-diploma-app' ]], branches: [[name: "refs/tags/${env.TAG}"]]], poll: false
            }
        }   

        stage('Build and Push Docker Image') {
            steps {
                container('docker') {
                    script {
                        // Сборка Docker-образа
                        docker.build("${env.REGISTRY}${env.IMAGE_NAME}:${env.TAG}")

                        // Пушим Docker-образ в Docker Registry
                        docker.withRegistry("https://${env.REGISTRY}", 'cr_yandex') {
                            docker.image("${env.REGISTRY}${env.IMAGE_NAME}:${env.TAG}").push(env.TAG)
                        }
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                git branch: 'main', url: 'https://github.com/gizadirov/netology-diploma'
                container('k8s-tools') {
                    withCredentials([file(credentialsId: 'kube_conf', variable: 'KUBECRED')]) {
                        sh 'mkdir ~/.kube'
                        sh 'cat $KUBECRED > ~/.kube/config'
                        sh "qbec apply jenkins --vm:ext-str imageTag=${env.TAG} --root k8s/deploy/app --yes"
                    }
                }
            }
        }
    }
}